/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
	(-1.00 	-1.00	0.0)
	(-0.50 	-1.00	0.0)	
	(0.00 	-1.00	0.0)
	(0.50	-1.00	0.0)
	(3.00	-1.00	0.0)
	(-1.00	0.00	0.0)	
	(-0.5	0.00	0.0)
	(-0.10	0.00	0.0)
	(0.10	0.00	0.0)
	(0.50	0.00	0.0)
	(3.00	0.00	0.0)
	(-1.00	1.00	0.0)
	(-0.50	1.00	0.0)
	(0.00	1.00	0.0)
	(0.50	1.00	0.0)
	(3.00	1.00	0.0)

	(-1.00 	-1.00	0.1)
	(-0.50 	-1.00	0.1)	
	(0.00 	-1.00	0.1)
	(0.50	-1.00	0.1)
	(3.00	-1.00	0.1)
	(-1.00	0.00	0.1)	
	(-0.5	0.00	0.1)
	(-0.10	0.00	0.1)
	(0.10	0.00	0.1)
	(0.50	0.00	0.1)
	(3.00	0.00	0.1)
	(-1.00	1.00	0.1)
	(-0.50	1.00	0.1)
	(0.00	1.00	0.1)
	(0.50	1.00	0.1)
	(3.00	1.00	0.1)

	(0.00	-0.10	0.0)
	(0.00	0.10	0.0)
	(0.00	-0.10	0.1)
	(0.00	0.10	0.1)
	(0.00	-0.50	0.0)
	(0.00	0.50	0.0)
	(0.00	-0.50	0.1)
	(0.00	0.50	0.1)
);

blocks
(
    hex (0 1 6 5 16 17 22 21) (20 15 1) simpleGrading 				// block 1
    ( 
        1
        1
        1
    )   

    hex (1 2 36 6 17 18 38 22) (20 15 1) simpleGrading 				// block 2
    ( 
        1
        1
        1
    )   

    hex (6 36 32 7 22 38 34 23) (20 20 1) simpleGrading 			// block 3
   	( 
        1
        (
        	(0.7 0.4 0.50)
        	(0.3 0.6 0.25)
        )
        1
    )  

    hex (36 9 8 32 38 25 24 34) (20 20 1) simpleGrading 			// block 4
   	( 
        1
        (
        	(0.7 0.4 0.50)
        	(0.3 0.6 0.25)
        )
        1
    )  
    
    hex (2 3 9 36 18 19 25 38) (20 15 1) simpleGrading 				// block 5
   	( 
        1
        1
        1
    )   
    
    hex (3 4 10 9 19 20 26 25) (100 15 1) simpleGrading 			// block 6
    ( 
        1
        1
        1
    )    

    hex (5 6 12 11 21 22 28 27)	(20 15 1) simpleGrading 				// block 7
    ( 
        1
        1
        1
    )   

    hex (6 37 13 12 22 39 29 28) (20 15 1) simpleGrading 			// block 8
    ( 
        1
        1
        1
    )   

    hex (7 33 37 6 23 35 39 22)	(20 20 1) simpleGrading 			// block 9 
   	( 
        1
        (
        	(0.3 0.6 4.0)
        	(0.7 0.4 2.0)
        )
        1
    )  

    hex (33 8 9 37 35 24 25 39)	(20 20 1) simpleGrading 			// block 10
   	( 
        1
        (
        	(0.3 0.6 4.0)
        	(0.7 0.4 2.0)
        )
        1
    )  

    hex (37 9 14 13 39 25 30 29) (20 15 1) simpleGrading 			// block 11
    ( 
        1
        1
        1
    )   

    hex (9 10 15 14 25 26 31 30) (100 15 1) simpleGrading 			// block 12
    ( 
        1
        1
        1
    )   
);

arcValue 	0.07071067811;
nArcValue	-0.07071067811;

edges
(
	arc 7 32  ($nArcValue $nArcValue 0.0)	
	arc 23 34 ($nArcValue $nArcValue 0.1)

	arc 7 33  ($nArcValue $arcValue 0.0)
	arc 23 35 ($nArcValue $arcValue 0.1)

	arc 32 8  ($arcValue $nArcValue 0.0)
	arc 34 24 ($arcValue $nArcValue 0.1)

	arc 33 8  ($arcValue $arcValue 0.0)
	arc 35 24 ($arcValue $arcValue 0.1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (11 27 21 5)
            (5 21 16 0)
        );
    }   

    outlet
    {
        type patch;
        faces
        (
            (31 15 10 26)
            (26 10 4 20)
        );
    }   


    wall
    {
        type wall;
        faces
        (
            (33 7 23 35)
            (33 35 24 8)
            (8 24 34 32)
            (23 7 32 34)
        );
    }   

    upper
    {
        type patch;
        faces
        (
            (11 12 28 27)
            (12 13 29 28)
            (13 14 30 29)
            (14 15 31 30)
        );
    }   

    lower
    {
        type patch;
        faces
        (
            (0 16 17 1)
            (1 17 18 2)
			(2 18 19 3)
            (3 19 20 4)

        );
    }   

    //empty faces are automatically included 
);

// ************************************************************************* //
